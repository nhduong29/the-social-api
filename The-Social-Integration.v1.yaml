openapi: 3.0.0
info:
  title: The Social CRM - Integration Specifications
  version: '1.0'
  description: >
    The CRM and Zeoniq sytem integration


    We use API keys as the secure key to access The Social CRM.

    Please get in touch with us to request an apiKey.


    For the work flow, please prefer this diagram:
    https://crm-zeoniq.herokuapp.com/docs/the-social-payment-earn-point.pdf


    FOR ALL THE ERROR CODE, PLEASE REFER THIS:



    ACCOUNT-NOT-FOUND: Account not found, Can't find this account in CRM


    ACCOUNT-DISABLED: Account is not active


    VOUCHER-NOT-FOUND: Vouvher is not valid


    VOUCHER-EXPIRED: Voucher is expired


    CREDIT-ERROR: Redeem credit got error


    SUBMIT-SALE-ERROR: Submit sale got error
  contact:
    name: Tsunago
    email: info@tsunago.asia
    url: 'https://www.tsunago.asia/contact-us/'
servers:
  - url: 'https://thesocial.stoplight.io/mocks/thesocial/thesocial-zeoniq/2252264'
paths:
  /customer:
    get:
      summary: Get Customer Information
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: &ref_4
                description: ''
                type: object
                x-examples:
                  example-1:
                    MemberNo: string
                    CardNo: string
                    MemberName: string
                    ExpiryDate: string
                    DateOfBirth: string
                    Email: string
                    MobileNo: string
                    PhoneNo: string
                    PointBalance: 0
                    PointValue: 0
                    WalletDesc: string
                    WalletBalance: 0
                properties:
                  MemberNo:
                    type: string
                    minLength: 1
                  CardNo:
                    type: string
                    minLength: 1
                  MemberName:
                    type: string
                    minLength: 1
                  ExpiryDate:
                    type: string
                    minLength: 1
                  DateOfBirth:
                    type: string
                    minLength: 1
                  Email:
                    type: string
                    minLength: 1
                  MobileNo:
                    type: string
                    minLength: 1
                  PointBalance:
                    type: number
                  PointValue:
                    type: number
                  WalletDesc:
                    type: string
                    minLength: 1
                  WalletBalance:
                    type: number
                required:
                  - MemberNo
                  - CardNo
                  - MemberName
                  - ExpiryDate
                  - DateOfBirth
                  - Email
                  - MobileNo
                  - PointBalance
                  - PointValue
                  - WalletDesc
                  - WalletBalance
              examples:
                example-1:
                  value:
                    MemberNo: '123456'
                    CardNo: '0000001'
                    MemberName: Duong
                    ExpiryDate: '2022-12-30'
                    DateOfBirth: '1991-29-09'
                    Email: duong@test.com
                    MobileNo: '+601125632514'
                    PointBalance: 5000
                    PointValue: 3625
                    WalletDesc: string
                    WalletBalance: 200
        '400':
          description: Bad Request
          content:
            application/json:
              schema: &ref_5
                description: ''
                type: object
                properties:
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - errorCode
                  - message
                title: Error
              examples:
                example-1:
                  value:
                    errorCode: ACC-NOT-FOUND
                    message: Accound not found
      operationId: get-customer
      parameters:
        - schema:
            type: string
          in: query
          name: cardNumber
          required: true
          description: Card number of Customer
      description: Get customer informations by cardNumber
      security:
        - Authorization apiKey: []
  /submit-sale:
    post:
      summary: Submit a sale data to CRM
      operationId: post-submit-sale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: &ref_0
                description: ''
                type: object
                properties:
                  PointEarned:
                    type: number
                  PointRedeemed:
                    type: number
                  PointBalance:
                    type: number
                  WalletDesc:
                    type: string
                    minLength: 1
                  WalletBalance:
                    type: number
                required:
                  - PointEarned
                  - PointRedeemed
                  - PointBalance
                  - WalletDesc
                  - WalletBalance
                x-examples:
                  example-1:
                    PointEarned: 0
                    PointRedeemed: 0
                    PointBalance: 0
                    WalletDesc: string
                    WalletBalance: 0
              examples:
                example-1:
                  value:
                    PointEarned: 0
                    PointRedeemed: 0
                    PointBalance: 0
                    WalletDesc: string
                    WalletBalance: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - errorCode
                  - message
              examples:
                example-1:
                  value:
                    errorCode: SUBMIT-SALE-ERROR
                    message: Can't submit sale...
      description: >-
        POS submit the transaction info to the CRM to check status, check
        points, credit
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                MemberNo:
                  type: string
                  minLength: 1
                POSId:
                  type: string
                  minLength: 1
                BillNo:
                  type: string
                  minLength: 1
                RefNo:
                  type: string
                  minLength: 1
                BizDate:
                  type: string
                  minLength: 1
                LocCode:
                  type: string
                  minLength: 1
                NetAmt:
                  type: number
                TaxAmt:
                  type: number
                ChargeAmt:
                  type: number
                AdjAmt:
                  type: number
                NetTotal:
                  type: number
                Remarks:
                  type: number
                BillImage:
                  type: string
                  minLength: 1
                OrderItems:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items: &ref_1
                    description: ''
                    type: object
                    properties:
                      OrderLine:
                        type: number
                      ItemCode:
                        type: string
                        minLength: 1
                      LineDesc:
                        type: string
                        minLength: 1
                      OrderQty:
                        type: number
                      UnitSellPrice:
                        type: number
                      NetAmt:
                        type: number
                      TaxAmt:
                        type: number
                      ChargeAmt:
                        type: number
                      Remarks:
                        type: string
                        minLength: 1
                    required:
                      - OrderLine
                      - ItemCode
                      - LineDesc
                      - OrderQty
                      - UnitSellPrice
                      - NetAmt
                      - TaxAmt
                      - ChargeAmt
                      - Remarks
                    x-examples:
                      example-1:
                        OrderLine: 0
                        ItemCode: string
                        LineDesc: string
                        OrderQty: 0
                        UnitSellPrice: 0
                        NetAmt: 0
                        TaxAmt: 0
                        ChargeAmt: 0
                        Remarks: string
                Payments:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items: &ref_2
                    description: ''
                    type: object
                    properties:
                      TenderCode:
                        type: string
                        minLength: 1
                      TenderDesc:
                        type: string
                        minLength: 1
                      CurrCode:
                        type: string
                        minLength: 1
                      PaymentAmt:
                        type: number
                      PointAmount:
                        type: number
                      WalletAmount:
                        type: number
                    required:
                      - TenderCode
                      - TenderDesc
                      - CurrCode
                      - PaymentAmt
                      - PointAmount
                      - WalletAmount
                    x-examples:
                      example-1:
                        TenderCode: string
                        TenderDesc: string
                        CurrCode: string
                        PaymentAmt: 0
                        PointAmount: 0
                        WalletAmount: 0
                Vouchers:
                  type: array
                  items: &ref_3
                    title: Voucher
                    type: object
                    description: Voucher of Customer
                    x-examples:
                      example-1:
                        VoucherNo: string
                        BarcodeNo: string
                        ExpiryDate: string
                        VoucherTypeCode: string
                        VoucherValue: 0
                        VoucherName: string
                    properties:
                      VoucherNo:
                        type: string
                      BarcodeNo:
                        type: string
                      ExpiryDate:
                        type: string
                      VoucherTypeCode:
                        type: string
                      VoucherValue:
                        type: number
                      VoucherName:
                        type: string
              required:
                - MemberNo
                - POSId
                - BillNo
                - RefNo
                - BizDate
                - LocCode
                - NetAmt
                - TaxAmt
                - ChargeAmt
                - AdjAmt
                - NetTotal
                - Remarks
                - BillImage
                - OrderItems
            examples:
              example-1:
                value:
                  MemberNo: string
                  POSId: string
                  BillNo: string
                  RefNo: string
                  BizDate: string
                  LocCode: string
                  NetAmt: 0
                  TaxAmt: 0
                  ChargeAmt: 0
                  AdjAmt: 0
                  NetTotal: 0
                  Remarks: 0
                  BillImage: string
                  OrderItems:
                    - OrderLine: 0
                      ItemCode: string
                      LineDesc: string
                      OrderQty: 0
                      UnitSellPrice: 0
                      NetAmt: 0
                      TaxAmt: 0
                      ChargeAmt: 0
                      Remarks: string
                  Payments:
                    - TenderCode: string
                      TenderDesc: string
                      CurrCode: string
                      PaymentAmt: 0
                      PointAmount: 0
                      WalletAmount: 0
                  Vouchers:
                    - VoucherNo: string
                      BarcodeNo: string
                      ExpiryDate: string
                      VoucherTypeCode: string
                      VoucherValue: 0
                      VoucherName: string
      parameters:
        - schema:
            type: string
          in: header
          name: LocCode
          description: Outlet
        - schema:
            type: string
          in: header
          name: POSId
        - schema:
            type: string
          in: header
          name: Source
        - schema:
            type: string
          in: header
          name: Signature
          description: 'apiKey, Please contact us to get this key'
    put:
      summary: 'Submit a sale data to CRM, Update on CRM, Close Transaction'
      operationId: put-submit-sale
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: *ref_0
              examples:
                example-1:
                  value:
                    PointEarned: 0
                    PointRedeemed: 0
                    PointBalance: 0
                    WalletDesc: string
                    WalletBalance: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - errorCode
                  - message
              examples:
                example-1:
                  value:
                    errorCode: SUBMIT-SALE-ERROR
                    message: Can't submit sale...
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                MemberNo:
                  type: string
                  minLength: 1
                POSId:
                  type: string
                  minLength: 1
                BillNo:
                  type: string
                  minLength: 1
                RefNo:
                  type: string
                  minLength: 1
                BizDate:
                  type: string
                  minLength: 1
                LocCode:
                  type: string
                  minLength: 1
                NetAmt:
                  type: number
                TaxAmt:
                  type: number
                ChargeAmt:
                  type: number
                AdjAmt:
                  type: number
                NetTotal:
                  type: number
                Remarks:
                  type: number
                BillImage:
                  type: string
                  minLength: 1
                OrderItems:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items: *ref_1
                Payments:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items: *ref_2
                Vouchers:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items: *ref_3
              required:
                - MemberNo
                - POSId
                - BillNo
                - RefNo
                - BizDate
                - LocCode
                - NetAmt
                - TaxAmt
                - ChargeAmt
                - AdjAmt
                - NetTotal
                - Remarks
                - BillImage
                - OrderItems
                - Payments
                - Vouchers
            examples:
              example-1:
                value:
                  MemberNo: string
                  POSId: string
                  BillNo: string
                  RefNo: string
                  BizDate: string
                  LocCode: string
                  NetAmt: 0
                  TaxAmt: 0
                  ChargeAmt: 0
                  AdjAmt: 0
                  NetTotal: 0
                  Remarks: 0
                  BillImage: string
                  OrderItems:
                    - OrderLine: 0
                      ItemCode: string
                      LineDesc: string
                      OrderQty: 0
                      UnitSellPrice: 0
                      NetAmt: 0
                      TaxAmt: 0
                      ChargeAmt: 0
                      Remarks: string
                  Payments:
                    - TenderCode: string
                      TenderDesc: string
                      CurrCode: string
                      PaymentAmt: 0
                      PointAmount: 0
                      WalletAmount: 0
                  Vouchers:
                    - VoucherNo: string
                      BarcodeNo: string
                      ExpiryDate: string
                      VoucherTypeCode: string
                      VoucherValue: 0
                      VoucherName: string
        description: ''
      description: >-
        THIS CALL TO CLOSE THE TRANSACTION, FINISH PAYMENT PROCESS.


        POS submit the transaction info to the CRM to update point, credit,
        payment history AND CLOSE TRANSACTION!

        For this API, If customer using any vouchers, you need to send it belong
        to vouchers array. The same for the payments, you have to send all the
        payment method that used in this transaction.
      security:
        - Authorization apiKey: []
      parameters: []
  /redeem-voucher:
    get:
      summary: Validate Voucher
      operationId: get-redeem-voucher
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema: *ref_3
              examples:
                example-1:
                  value:
                    VoucherNo: string
                    BarcodeNo: string
                    ExpiryDate: string
                    VoucherTypeCode: string
                    VoucherValue: 0
                    VoucherName: string
        '400':
          description: Bad request if voucher not found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - errorCode
                  - message
              examples:
                example-1:
                  value:
                    errorCode: VOUCHER-EXPIRED
                    message: string
                example-2:
                  value:
                    errorCode: VOUCHER-NOT-FOUND
                    message: string
      description: Validate Voucher information from CRM
      parameters:
        - schema:
            type: string
          in: query
          required: true
          name: VoucherNo
  /redeem-credit:
    post:
      summary: Use Credit
      operationId: post-redeem-credit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  'AcceptedAmt ':
                    type: number
                  WalletBalance:
                    type: number
                  RejectedAmt:
                    type: number
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - errorCode
                  - message
              examples:
                example-1:
                  value:
                    errorCode: ERROR
                    message: Error mesage...
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                CardNo:
                  type: string
                TopupAmt:
                  type: number
            examples:
              example-1:
                value:
                  CardNo: string
                  TopupAmt: 0
        description: ''
      security:
        - Authorization apiKey: []
      description: >-
        This API just to get the credit info when user want to pay with credit.

        To update in our CRM, you need to add the to payments array in PUT
        /submit-sale
  /health-check:
    get:
      summary: CRM heath check
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - FAILED
                      - OK
              examples:
                example-1:
                  value:
                    status: OK
                example-2:
                  value:
                    status: FAILED
      operationId: get-health-check
      security:
        - Authorization apiKey: []
      description: This API use for check the CRM is online or not.
components:
  schemas:
    Customer: *ref_4
    Payment: *ref_2
    OrderItem: *ref_1
    Voucher: *ref_3
    Error: *ref_5
    SubmitSalesResult: *ref_0
  securitySchemes:
    Authorization apiKey:
      name: apiKey
      type: apiKey
      in: header
      description: >-
        Please get in touch with us to request a apiKey. You have to send this
        key in every request to access CRM
security:
  - Authorization with Bearer type: []
